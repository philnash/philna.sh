---
import { getCollection } from "astro:content";
const allBlogPosts = await getCollection("blog");

function intersects(a: string[], b: string[]) {
  return a.filter(Set.prototype.has, new Set(b)).length;
}

type Props = {
  tags: string[];
  id: string;
};

const { tags, id } = Astro.props;

const relatedPosts = allBlogPosts
  .filter((post) => post.id !== id)
  .filter((post) => intersects(tags, post.data.tags) > 0)
  .sort((a, b) => {
    const sharedTagsWithA = intersects(tags, a.data.tags);
    const sharedTagsWithB = intersects(tags, b.data.tags);
    return (
      sharedTagsWithB - sharedTagsWithA ||
      b.data.pubDate.getTime() - a.data.pubDate.getTime()
    );
  })
  .slice(0, 4);
---

<div class="related">
  <h2>You might also like</h2>
  <ul>
    {
      relatedPosts.map((post) => (
        <li>
          <a href={`/blog/${post.slug}`}>{post.data.title}</a>
        </li>
      ))
    }
  </ul>
</div>
