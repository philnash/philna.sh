---
import type { Page } from "astro";
import Previous from "./Pagination/Previous.astro";
import Next from "./Pagination/Next.astro";
import Link from "./Pagination/Link.astro";
import Current from "./Pagination/Current.astro";
import Ellipsis from "./Pagination/Ellipsis.astro";
import { getPageNumbers } from "../utils/pagination";

type Props = {
  page: Page<any>;
  urlPattern: string;
  firstPageUrl?: string;
  windowSize?: number;
  showPrevNext?: boolean;
  showFirstLast?: boolean;
};

const {
  page,
  urlPattern,
  firstPageUrl,
  windowSize = 5,
  showFirstLast = true,
  showPrevNext = true,
} = Astro.props;

const pageNumbers = getPageNumbers(page, windowSize);
const firstPageInRange = pageNumbers[0];
const lastPageInRange = pageNumbers[pageNumbers.length - 1];
const showFirst = showFirstLast && pageNumbers[0] !== 1;
const showLast = showFirstLast && lastPageInRange !== page.lastPage;
const previousUrl =
  firstPageUrl && page.currentPage === 2 ? firstPageUrl : page.url.prev;
---

<nav role="navigation" aria-label="Pagination">
  <ul>
    {showPrevNext && <Previous url={previousUrl} />}
    {
      showFirst && (
        <li>
          <Link
            pageNumber={1}
            urlPattern={urlPattern}
            firstPageUrl={firstPageUrl}
          />
        </li>
      )
    }
    {
      firstPageInRange > 2 && (
        <li>
          <Ellipsis />
        </li>
      )
    }
    {
      pageNumbers.map((pageNumber) => {
        return (
          <li>
            {pageNumber === page.currentPage ? (
              <Current pageNumber={pageNumber} />
            ) : (
              <Link
                pageNumber={pageNumber}
                urlPattern={urlPattern}
                firstPageUrl={firstPageUrl}
              />
            )}
          </li>
        );
      })
    }
    {
      lastPageInRange < page.lastPage - 1 && (
        <li>
          <Ellipsis />
        </li>
      )
    }
    {
      showLast && (
        <li>
          <Link
            pageNumber={page.lastPage}
            urlPattern={urlPattern}
            firstPageUrl={firstPageUrl}
          />
        </li>
      )
    }
    {showPrevNext && <Next url={page.url.next} />}
  </ul>
</nav>
