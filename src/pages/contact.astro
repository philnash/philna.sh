---
export const prerender = false;

function env() {
  if (Astro.locals.runtime?.env) {
    return Astro.locals.runtime.env;
  } else {
    return process.env;
  }
}

const ENV = env();

import DefaultLayout from "../layouts/DefaultLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { Resend } from "@philnash/resend";
import { z } from "zod";

type ContactErrors = {
  email: string[];
  subject: string[];
  message: string[];
};

const title = "Contact";
const method = Astro.request.method;

const emailSchema = z
  .string()
  .email({ message: "Please enter a valid email address" });

function stringFromFormDataEntryValue(parameter: FormDataEntryValue | null) {
  return parameter === null ? "" : parameter.toString().trim();
}

const errors: ContactErrors = { email: [], subject: [], message: [] };
let email = "",
  subject = "",
  message = "";
let successMessage = "";

if (method === "POST") {
  try {
    const data = await Astro.request.formData();
    email = stringFromFormDataEntryValue(data.get("email"));
    subject = stringFromFormDataEntryValue(data.get("subject"));
    message = stringFromFormDataEntryValue(data.get("message"));

    const emailResult = emailSchema.safeParse(email);
    if (!emailResult.success) {
      errors.email.push(...emailResult.error.errors.map((e) => e.message));
    }
    if (subject === "") {
      errors.subject.push("Please enter a subject");
    }
    if (message === "") {
      errors.message.push("Please enter a message");
    }
    if (Object.values(errors).flat().length === 0) {
      const resend = new Resend(ENV.RESEND_API_KEY);
      await resend.emails.send({
        to: ENV.RESEND_TO_EMAIL,
        from: ENV.RESEND_FROM_EMAIL,
        reply_to: email,
        subject: subject,
        text: message,
      });
      successMessage = "Thanks for your email, I'll get back to you soon!";
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
    throw error;
  }
}
---

<DefaultLayout
  title={`${title} | ${SITE_TITLE}`}
  description={SITE_DESCRIPTION}
>
  <div class="home row">
    <header class="page-header cell cell-12">
      <h1 class="page-title">{title}</h1>
    </header>
  </div>

  <div class="row">
    <div class="cell cell-12 cell-med-10 cell-centre contact">
      {
        successMessage ? (
          <p>{successMessage}</p>
        ) : (
          <>
            <p>
              You can email Phil here or catch him on any of <a href="/links">these social networks</a>.
            </p>
            <form method="POST">
              <div>
                <label for="email">Your email</label>
                {errors.email.map((error) => (
                  <p class="form-error">{error}</p>
                ))}
                <input
                  type="email"
                  id="email"
                  name="email"
                  placeholder="you@domain.com"
                  value={email}
                  class={errors.email.length > 0 ? "error" : ""}
                  required
                />
              </div>
              <div>
                <label for="subject">Subject</label>
                {errors.subject.map((error) => (
                  <p class="form-error">{error}</p>
                ))}
                <input
                  type="text"
                  id="subject"
                  name="subject"
                  placeholder="Hi Phil! ðŸ‘‹"
                  value={subject}
                  class={errors.subject.length > 0 ? "error" : ""}
                  required
                />
              </div>
              <div>
                <label for="message">Message</label>
                {errors.message.map((error) => (
                  <p class="form-error">{error}</p>
                ))}
                <!-- prettier-ignore -->
                <textarea
                  id="message"
                  name="message"
                  placeholder="Your message"
                  class={errors.message.length > 0 ? "error" : ""}
                  required
                >{message}</textarea>
              </div>
              <div>
                <button type="submit">
                  <span class="btn-submit-text">Send</span>
                  <span class="btn-submit-loading" aria-live="assertive" data-loading-msg="Sending..."></span>
                </button>
              </div>
            </form>
          </>
        )
      }
    </div>
  </div>
  <script type="module" src="../src/scripts/form.ts"></script>
</DefaultLayout>
